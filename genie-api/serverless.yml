service: terrellflautt-genie-api

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  stage: ${opt:stage, 'prod'}
  environment:
    STAGE: ${self:provider.stage}
    DYNAMODB_TABLE: ${self:service}-${self:provider.stage}
    OPENAI_API_KEY: ${ssm:/terrellflautt/openai-api-key}

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

functions:
  genie:
    handler: handler.genie
    events:
      - http:
          path: /ask
          method: post
          cors:
            origin:
              - https://terrellflautt.com
              - https://www.terrellflautt.com
            headers:
              - Content-Type
              - Authorization
            allowCredentials: true
      - websocket:
          route: $connect
      - websocket:
          route: $disconnect
      - websocket:
          route: ask

  getQuestions:
    handler: handler.getQuestions
    events:
      - http:
          path: /questions/{userId}
          method: get
          cors:
            origin:
              - https://terrellflautt.com
              - https://www.terrellflautt.com

resources:
  Resources:
    GenieTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
          - AttributeName: timestamp
            AttributeType: N
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
          - AttributeName: timestamp
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST

    GenieDomainName:
      Type: AWS::ApiGatewayV2::DomainName
      Properties:
        DomainName: genie.terrellflautt.com
        DomainNameConfigurations:
          - CertificateArn: ${ssm:/terrellflautt/ssl-certificate-arn}
            EndpointType: REGIONAL

    GenieMapping:
      Type: AWS::ApiGatewayV2::ApiMapping
      Properties:
        DomainName: !Ref GenieDomainName
        ApiId: !Ref WebsocketsApi
        Stage: ${self:provider.stage}

plugins:
  - serverless-offline